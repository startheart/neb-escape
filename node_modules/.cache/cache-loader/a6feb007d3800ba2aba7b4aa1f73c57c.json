{"remainingRequest":"/Users/xuguodong/didi/develop/btc/neb/neb-escape/node_modules/babel-loader/lib/index.js!/Users/xuguodong/didi/develop/btc/neb/neb-escape/node_modules/eslint-loader/index.js??ref--13-0!/Users/xuguodong/didi/develop/btc/neb/neb-escape/src/store/modules/user.js","dependencies":[{"path":"/Users/xuguodong/didi/develop/btc/neb/neb-escape/src/store/modules/user.js","mtime":1528030088000},{"path":"/Users/xuguodong/didi/develop/btc/neb/neb-escape/node_modules/cache-loader/dist/cjs.js","mtime":1528031134000},{"path":"/Users/xuguodong/didi/develop/btc/neb/neb-escape/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/xuguodong/didi/develop/btc/neb/neb-escape/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["var user = {\n  state: {\n    info: null,\n    macdList: null\n  },\n  getters: {\n    getUserInfo: function getUserInfo(state) {\n      return state.info;\n    },\n    getMacdList: function getMacdList(state) {\n      return state.macdList;\n    }\n  },\n  mutations: {\n    updateUserInfo: function updateUserInfo(state, data) {\n      state.info = data.info;\n    },\n    updateMacdList: function updateMacdList(state, data) {\n      state.macdList = data.macdList;\n    }\n  }\n};\nexport default user;",{"version":3,"sources":["src/store/modules/user.js"],"names":["user","state","info","macdList","getters","getUserInfo","getMacdList","mutations","updateUserInfo","data","updateMacdList"],"mappings":"AAAA,IAAMA,OAAO;AACXC,SAAO;AACLC,UAAM,IADD;AAELC,cAAU;AAFL,GADI;AAKXC,WAAS;AACPC,iBAAa;AAAA,aAASJ,MAAMC,IAAf;AAAA,KADN;AAEPI,iBAAa;AAAA,aAASL,MAAME,QAAf;AAAA;AAFN,GALE;AASXI,aAAW;AACTC,kBADS,0BACOP,KADP,EACcQ,IADd,EACoB;AAC3BR,YAAMC,IAAN,GAAaO,KAAKP,IAAlB;AACD,KAHQ;AAITQ,kBAJS,0BAIOT,KAJP,EAIcQ,IAJd,EAIoB;AAC3BR,YAAME,QAAN,GAAiBM,KAAKN,QAAtB;AACD;AANQ;AATA,CAAb;AAmBA,eAAeH,IAAf","sourceRoot":"/Users/xuguodong/didi/develop/btc/neb/neb-escape","sourcesContent":["const user = {\n  state: {\n    info: null,\n    macdList: null\n  },\n  getters: {\n    getUserInfo: state => state.info,\n    getMacdList: state => state.macdList\n  },\n  mutations: {\n    updateUserInfo (state, data) {\n      state.info = data.info\n    },\n    updateMacdList (state, data) {\n      state.macdList = data.macdList\n    }\n  }\n}\n\nexport default user\n"]}]}